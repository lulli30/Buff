/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package login;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static login.Dashboard.btnProfile;
import static login.Dashboard.lblUser;
/**
 *
 * @author lulli
 */
public class trainers extends javax.swing.JFrame {

    /**
     * Creates new form trainers
     */
    public trainers() {
        initComponents();
        showTrainers();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnClose = new javax.swing.JLabel();
        cboTrainers = new javax.swing.JComboBox<>();
        btnSelect = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(650, 350));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseMouseClicked(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 30, 30));

        cboTrainers.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cboTrainers.setBorder(null);
        cboTrainers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTrainersActionPerformed(evt);
            }
        });
        getContentPane().add(cboTrainers, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 380, 50));

        btnSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSelectMouseClicked(evt);
            }
        });
        getContentPane().add(btnSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 280, 320, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/selecttrainers.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseClicked
        setVisible(false);
    }//GEN-LAST:event_btnCloseMouseClicked

    private void btnSelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSelectMouseClicked
        String selectedTrainer = cboTrainers.getSelectedItem().toString();
        int a = JOptionPane.showConfirmDialog(null,"Do you really want to request from this trainer? You will be charge 500 Pesos once trainer accepted this request", "Select",JOptionPane.YES_NO_OPTION);
        if(a==0){
            selectTrainer(selectedTrainer);
        }
    }//GEN-LAST:event_btnSelectMouseClicked

    private void cboTrainersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTrainersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTrainersActionPerformed
    private void showTrainers(){
        Connection dbconn = DBConnection.connectDB();
            try {
                PreparedStatement st = dbconn.prepareStatement("SELECT name FROM trainers");
                ResultSet rs = st.executeQuery();

                while (rs.next()) {
                    String name = rs.getString("name");
                    cboTrainers.addItem(name);
                }
                rs.close();
                st.close();
                dbconn.close();
            } catch (SQLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    private int getTrainerId(String trainerName) {
    Connection dbconn = DBConnection.connectDB();
    int trainerId = 0;
        try {
            PreparedStatement st = dbconn.prepareStatement("SELECT id FROM trainers WHERE name = ?");
            st.setString(1, trainerName);
            ResultSet rs = st.executeQuery();

            if (rs.next()) {
                trainerId = rs.getInt("id");
            }
            rs.close();
            st.close();
            dbconn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    return trainerId;
}
    
    private void selectTrainer(String trainerName) {
        // Get the user ID or name that you want to update
        String userId = lblUser.getText();
        String name = btnProfile.getText();
        Connection dbconn = DBConnection.connectDB();
            try {
                // Send the request by inserting a new row into the requests table
                PreparedStatement st = dbconn.prepareStatement("INSERT INTO request (name, user_id, trainer_id, status) VALUES (?, ?, ?, ?)");
                st.setString(1, name);
                st.setString(2,userId);
                st.setInt(3, getTrainerId(trainerName)); // Use getTrainerId to retrieve the trainer ID
                st.setString(4, "pending");
                int rowsAffectedRequests = st.executeUpdate();
                if (rowsAffectedRequests > 0) {
                    JOptionPane.showMessageDialog(this, "Request sent successfully. Trainer updated for the user.", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
                st.close();
                dbconn.close();
            } catch (SQLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(trainers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(trainers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(trainers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(trainers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new trainers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnClose;
    private javax.swing.JLabel btnSelect;
    private javax.swing.JComboBox<String> cboTrainers;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
