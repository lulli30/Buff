package login;
import java.awt.Color;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author lulli
 */
public class registration extends javax.swing.JFrame {
    
    public registration() {
        initComponents();
        setLocationRelativeTo(null);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.png")));
        txtName.setBackground(new Color(0, 0, 0, 0));
        txtPassword.setBackground(new Color(0, 0, 0, 0));
        cboGender.setBackground(new Color(0, 0, 0, 0));
        txtAge.setBackground(new Color(0, 0, 0, 0));
        cboPlan.setBackground(new Color(0, 0, 0, 0));
        txtAddress.setBackground(new Color(0, 0, 0, 0));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        cboGender = new javax.swing.JComboBox<>();
        txtAge = new javax.swing.JTextField();
        cboPlan = new javax.swing.JComboBox<>();
        txtAddress = new javax.swing.JTextField();
        btnSignup = new javax.swing.JLabel();
        btnView = new javax.swing.JLabel();
        chkTerms = new javax.swing.JCheckBox();
        btnLogin = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtName.setBackground(new java.awt.Color(51, 51, 51));
        txtName.setColumns(1);
        txtName.setFont(txtName.getFont().deriveFont((float)12));
        txtName.setForeground(new java.awt.Color(204, 204, 204));
        txtName.setBorder(null);
        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNameFocusGained(evt);
            }
        });
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 122, 190, 30));

        txtPassword.setBackground(new java.awt.Color(51, 51, 51));
        txtPassword.setForeground(new java.awt.Color(204, 204, 204));
        txtPassword.setBorder(null);
        getContentPane().add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 190, 40));

        cboGender.setBackground(new java.awt.Color(255, 255, 255));
        cboGender.setForeground(java.awt.Color.lightGray);
        cboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        cboGender.setBorder(null);
        cboGender.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cboGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboGenderActionPerformed(evt);
            }
        });
        getContentPane().add(cboGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, 220, 20));

        txtAge.setBackground(new java.awt.Color(51, 51, 51));
        txtAge.setColumns(1);
        txtAge.setFont(txtAge.getFont().deriveFont((float)12));
        txtAge.setForeground(new java.awt.Color(204, 204, 204));
        txtAge.setBorder(null);
        txtAge.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAgeFocusGained(evt);
            }
        });
        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAgeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAgeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAgeKeyTyped(evt);
            }
        });
        getContentPane().add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 272, 190, 30));

        cboPlan.setBackground(new java.awt.Color(255, 255, 255));
        cboPlan.setForeground(new java.awt.Color(153, 153, 153));
        cboPlan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "One Month", "Two Months", "Three Months", "Six Months", "One Year" }));
        cboPlan.setBorder(null);
        cboPlan.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cboPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPlanActionPerformed(evt);
            }
        });
        getContentPane().add(cboPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, 220, 20));

        txtAddress.setBackground(new java.awt.Color(51, 51, 51));
        txtAddress.setColumns(1);
        txtAddress.setFont(txtAddress.getFont().deriveFont((float)12));
        txtAddress.setForeground(new java.awt.Color(204, 204, 204));
        txtAddress.setBorder(null);
        txtAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAddressFocusGained(evt);
            }
        });
        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });
        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAddressKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAddressKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddressKeyTyped(evt);
            }
        });
        getContentPane().add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 372, 220, 30));

        btnSignup.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSignup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSignupMouseClicked(evt);
            }
        });
        getContentPane().add(btnSignup, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, 270, 40));

        btnView.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnView.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnViewMouseClicked(evt);
            }
        });
        getContentPane().add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 180, 30, 20));

        chkTerms.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        getContentPane().add(chkTerms, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, -1, -1));

        btnLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLoginMouseClicked(evt);
            }
        });
        getContentPane().add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 510, 150, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/signup.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusGained

    }//GEN-LAST:event_txtNameFocusGained

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed

    }//GEN-LAST:event_txtNameKeyPressed

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameKeyReleased

    private void txtNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped

    }//GEN-LAST:event_txtNameKeyTyped
    private boolean passwordVisible = false;
    private void btnViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewMouseClicked

        if (passwordVisible) {
            // Hide the password
            txtPassword.setEchoChar('\u25cf');
            passwordVisible = false;
        } else {
            // Show the password
            txtPassword.setEchoChar((char) 0);
            passwordVisible = true;
        }
    }//GEN-LAST:event_btnViewMouseClicked

    private void cboGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboGenderActionPerformed

    private void txtAgeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAgeFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeFocusGained

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtAgeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeKeyPressed

    private void txtAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeKeyReleased

    private void txtAgeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeKeyTyped

    private void cboPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPlanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboPlanActionPerformed

    private void txtAddressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAddressFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressFocusGained

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void txtAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressKeyPressed

    private void txtAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressKeyReleased

    private void txtAddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressKeyTyped

    private void btnSignupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSignupMouseClicked
        String name = txtName.getText();
        String password = txtPassword.getText();
        String gender = cboGender.getSelectedItem().toString();
        String age = txtAge.getText();
        String plan = cboPlan.getSelectedItem().toString();
        String address = txtAddress.getText();

        // Check if the checkbox is not selected !chkTerms.isSelected()
        if (name.isEmpty() || password.isEmpty() || gender.isEmpty() || age.isEmpty() || plan.isEmpty() || address.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Fill up the form properly.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!chkTerms.isSelected()) {
            JOptionPane.showMessageDialog(this, "Please agree to the terms and conditions.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            // Call the userRegister method with the updated INSERT statement
            userRegister(name, password, gender, age, plan, address);
            userBalance(name, plan);

            // Clear the input fields
            txtName.setText("");
            txtPassword.setText("");
            txtAge.setText("");
            txtAddress.setText("");
            chkTerms.setSelected(false);
        }
    }//GEN-LAST:event_btnSignupMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        
    }//GEN-LAST:event_jLabel1MouseClicked

    private void btnLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoginMouseClicked
        dispose();
        new login().setVisible(true);
    }//GEN-LAST:event_btnLoginMouseClicked
    
    public void clearFields(){
        txtName.setText("");
        txtPassword.setText("");
        txtAge.setText("");
        txtAddress.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnLogin;
    private javax.swing.JLabel btnSignup;
    private javax.swing.JLabel btnView;
    private javax.swing.JComboBox<String> cboGender;
    private javax.swing.JComboBox<String> cboPlan;
    private javax.swing.JCheckBox chkTerms;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables

    private void userRegister(String name, String password, String gender, String age, String plan, String address) {
        Connection dbconn = DBConnection.connectDB();
            try {
                String query = "INSERT INTO users (name, password, gender, age, plan, address) VALUES (?, ?, ?, ?, ?, ?)";
                PreparedStatement st = dbconn.prepareStatement(query);
                st.setString(1, name);
                st.setString(2, password);
                st.setString(3, gender);
                st.setString(4, age);
                st.setString(5, plan);
                st.setString(6, address);;
                int rowsAffected = st.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "User registered successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                    clearFields();
                }
                st.close();
                dbconn.close();
            } catch (SQLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    private void userBalance(String name, String plan) {
        Connection dbconn = DBConnection.connectDB();
        Date currentDate = new Date();
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(currentDate);
        int balance = 0;
        String dates = "";
        PreparedStatement st = null;
        try {
            if (plan.equals("One Month")) {
                balance = 1500;
                calendar.add(Calendar.MONTH, 1);
            } else if (plan.equals("Two Months")) {
                balance = 2500;
                calendar.add(Calendar.MONTH, 2);
            } else if (plan.equals("Three Months")) {
                balance = 3000;
                calendar.add(Calendar.MONTH, 3);
            } else if (plan.equals("Six Months")) {
                balance = 5500;
                calendar.add(Calendar.MONTH, 6);
            } else {
                balance = 9000;
                calendar.add(Calendar.YEAR, 1);
            }
            Date updatedDate = calendar.getTime();
            SimpleDateFormat dFormat = new SimpleDateFormat("MMM d, yyyy");
            dates = dFormat.format(updatedDate);
            String query = "INSERT INTO balance (name, amount, expiration) VALUES (?, ?, ?)";
            st = dbconn.prepareStatement(query);
            st.setString(1, name);
            st.setInt(2, balance);
            st.setString(3, dates);
            st.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                if (st != null) {
                    st.close();
                }
                if (dbconn != null) {
                    dbconn.close();
                }
            } catch (SQLException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}


